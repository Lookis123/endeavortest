{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from \"react\";\nfunction useSticky() {\n  _s();\n  var _arguments = arguments,\n    _this = this;\n  const [isSticky, setSticky] = useState(false);\n  const element = useRef(null);\n  const handleScroll = () => {\n    window.scrollX > element.current.getBoundingClientRect().bottom ? setSticky(true) : setSticky(false);\n  };\n\n  // i tried to fix the performance issue.\n  const debounce = function (func) {\n    let wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n    let immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    let timeOut;\n    return () => {\n      let context = _this,\n        args = _arguments;\n      const later = () => {\n        timeOut = null;\n        if (!immediate) func.apply(context, args);\n      };\n      const callNow = immediate && !timeOut;\n      clearTimeout(timeOut);\n      timeOut = setTimeout(later);\n      if (callNow) func.apply(context, args);\n    };\n  };\n  useEffect(() => {\n    window.addEventListener(\"scroll\", debounce(handleScroll));\n    return () => {\n      window.removeEventListener(\"scroll\", () => handleScroll);\n    };\n  }, [debounce, handleScroll]);\n  return {\n    isSticky,\n    element\n  };\n}\n_s(useSticky, \"LZR3uTxto6+Bh+TvKd7BTAN08Qg=\");\nexport default useSticky;","map":{"version":3,"names":["useEffect","useState","useRef","useSticky","isSticky","setSticky","element","handleScroll","window","scrollX","current","getBoundingClientRect","bottom","debounce","func","wait","immediate","timeOut","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","addEventListener","removeEventListener"],"sources":["/Users/dimitrisboulasikis/Documents/GitHub/endevor/endeavor2/src/hooks/useSticky.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\"\n\nfunction useSticky() {\n  const [isSticky, setSticky] = useState(false)\n  const element = useRef(null)\n\n  const handleScroll = () => {\n    window.scrollX > element.current.getBoundingClientRect().bottom\n      ? setSticky(true)\n      : setSticky(false)\n  }\n\n  // i tried to fix the performance issue.\n  const debounce = (func, wait=20, immediate = true) => {\n    let timeOut\n    return () => {\n      let context = this,\n        args = arguments\n      const later = () => {\n        timeOut = null\n        if (!immediate) func.apply(context, args)\n      }\n      const callNow = immediate && !timeOut\n      clearTimeout(timeOut)\n      timeOut = setTimeout(later)\n      if (callNow) func.apply(context, args)\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", debounce(handleScroll))\n    return () => {\n      window.removeEventListener(\"scroll\", () => handleScroll)\n    }\n  }, [debounce, handleScroll])\n\n  return { isSticky, element }\n}\n\nexport default useSticky"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAEnD,SAASC,SAAS,GAAG;EAAA;EAAA;IAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,SAAS,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMK,OAAO,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAE5B,MAAMK,YAAY,GAAG,MAAM;IACzBC,MAAM,CAACC,OAAO,GAAGH,OAAO,CAACI,OAAO,CAACC,qBAAqB,EAAE,CAACC,MAAM,GAC3DP,SAAS,CAAC,IAAI,CAAC,GACfA,SAAS,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAMQ,QAAQ,GAAG,UAACC,IAAI,EAAgC;IAAA,IAA9BC,IAAI,uEAAC,EAAE;IAAA,IAAEC,SAAS,uEAAG,IAAI;IAC/C,IAAIC,OAAO;IACX,OAAO,MAAM;MACX,IAAIC,OAAO,GAAG,KAAI;QAChBC,IAAI,GAAGC,UAAS;MAClB,MAAMC,KAAK,GAAG,MAAM;QAClBJ,OAAO,GAAG,IAAI;QACd,IAAI,CAACD,SAAS,EAAEF,IAAI,CAACQ,KAAK,CAACJ,OAAO,EAAEC,IAAI,CAAC;MAC3C,CAAC;MACD,MAAMI,OAAO,GAAGP,SAAS,IAAI,CAACC,OAAO;MACrCO,YAAY,CAACP,OAAO,CAAC;MACrBA,OAAO,GAAGQ,UAAU,CAACJ,KAAK,CAAC;MAC3B,IAAIE,OAAO,EAAET,IAAI,CAACQ,KAAK,CAACJ,OAAO,EAAEC,IAAI,CAAC;IACxC,CAAC;EACH,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdQ,MAAM,CAACkB,gBAAgB,CAAC,QAAQ,EAAEb,QAAQ,CAACN,YAAY,CAAC,CAAC;IACzD,OAAO,MAAM;MACXC,MAAM,CAACmB,mBAAmB,CAAC,QAAQ,EAAE,MAAMpB,YAAY,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACM,QAAQ,EAAEN,YAAY,CAAC,CAAC;EAE5B,OAAO;IAAEH,QAAQ;IAAEE;EAAQ,CAAC;AAC9B;AAAC,GAnCQH,SAAS;AAqClB,eAAeA,SAAS"},"metadata":{},"sourceType":"module"}